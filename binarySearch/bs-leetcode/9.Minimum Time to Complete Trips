class Solution {

    boolean bsOnAns(long t ,  int time[] , int tot)
    {
         long poss = 0;
         for(int i = 0 ; i < time.length ; ++i)
         {
            poss = poss + t/time[i];
            if(poss >= tot) return true;
         }

         return poss >= tot;
    }
    public long minimumTime(int[] time, int totalTrips) {
        int  n = time.length;

        long l = 0 ,r = Arrays.stream(time).min().getAsInt() * (long) totalTrips;;

        long ans = -1;


        while(l <= r)
        {
             long mid = l + (r  - l)/2;
             if(bsOnAns(mid,time,totalTrips))
             {
                  ans = mid ;
                  r = mid - 1;
             }
             else{
                   l = mid + 1;
             }
        }

        return ans;

    }
}