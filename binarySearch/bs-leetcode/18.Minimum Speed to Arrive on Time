class Solution {
    private boolean bsOnAns(int t , int [] d, double limit)
    {
        // System.out.println("t = " + t);
         double req = 0;
         int n = d.length;
         for(int i = 0 ; i < n - 1 ; ++i)
         {
              double time = Math.ceil((double)d[i]/t);
              req = req + time;
         }
         req = req + (double)(d[n - 1])/t;
         // System.out.println("req = " + req);
         return req <= limit;
    }
    public int minSpeedOnTime(int[] dist, double hour) {
        int n = dist.length;

        int ans = -1;
        int l = 0 , r = (int) Math.pow(10,7);

        while(l <= r)
        {
             int m = l + (r - l)/2;
             if(bsOnAns(m,dist,hour))
             {
                  ans = m;
                  r = m - 1;
             }
             else{
                  l = m + 1;
             }
        }

        return ans;
    }
}